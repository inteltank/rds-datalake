service: rds-datalake

frameworkVersion: '3'
params:
  prod:
    branchName: main
  stg:
    branchName: develop
  dev:
    branchName: feat/*
provider:
  name: aws
  deploymentMethod: direct
  runtime: python3.8
  stage: ${env:STAGE}
  region: ${env:AWS_DEFAULT_REGION}
  versionFunctions: false # Versioning takes time, but the default setting is versioning every time you deploy.


custom:
  accountId: ${env:AWS_ACCOUNT_ID}
  DBInstanceID: ${self:provider.stage}-${self:service}
  DBName: rdsDatalake
  DBInstanceClass: db.t2.micro
  DBAllocatedStorage: 20
  DBUsername: rdsDatalake
  DBPassword: rdsDatalake

plugins:
  - serverless-cloudformation-changesets
  - serverless-cloudformation-sub-variables

functions:
  - ${file(./functions/start-exporting-snapshot/resource.yml)}

layers:
  Basic:
    name: basic-layer
    path: layers/basic
    compatibleRuntimes:
      - python3.8
    compatibleArchitectures:
      - x86_64


resources:
  # pre-build a Network to deploy rds
  - ${file(./resources/EC2/vpc.yml)}
  - ${file(./resources/EC2/ec2-sg.yml)}
  - ${file(./resources/EC2/private-subnet-C.yml)}
  - ${file(./resources/EC2/private-subnet-D.yml)}
  - ${file(./resources/RDS/db-subnet-groups.yml)}


  # pre-build a Role for monitoring RDS
  - ${file(./resources/IAM/monitoring-role.yml)}
  # build RDS DB instance
  - ${file(./resources/RDS/instance.yml)}

  # pre-build a Network to connet between Cloud9 & EC2
  # - ${file(./resources/EC2/public-subnet.yml)}
  # - ${file(./resources/EC2/vpc-endpoints.yml)}
  # - ${file(./resources/EC2/ec2-internet-gw.yml)}
  # - ${file(./resources/EC2/ec2-route-tables.yml)}
  # - ${file(./resources/EC2/ec2-elastic-ip.yml)}
  # - ${file(./resources/EC2/ec2-natgateway.yml)}

  # build Cloud9 to execute SQL to RDS
  # - ${file(./resources/Cloud9/RDS-manager.yml)}

  # make Snapshot Pool
  #  - ${file(./resources/KMS/S3Bucket-Key.yml)}
  #  - ${file(./resources/S3/snapshot-store.yml)}

  # make eventbridge rule
  - ${file(./resources/IAM/eventbridge-role.yml)}
  - ${file(./resources/EventBridge/create-snapshot.yml)}

  # prepare IAM role for functions
  - ${file(./resources/IAM/export-execution-lambda-role.yml)}
  - ${file(./resources/IAM/rds-snapshot-export-role.yml)}
